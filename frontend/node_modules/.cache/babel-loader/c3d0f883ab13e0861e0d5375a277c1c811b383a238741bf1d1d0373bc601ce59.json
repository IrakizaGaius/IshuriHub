{"ast":null,"code":"const API_URL = 'http://localhost:5000';\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\nconsole.log(getToken());\nconst apiRequest = async (endpoint, method = 'GET', body = null) => {\n  const token = getToken();\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  try {\n    const response = await fetch(`${API_URL}${endpoint}`, {\n      method,\n      headers,\n      body: body ? JSON.stringify(body) : null\n    });\n\n    // Handle cases with no content (e.g., 204 No Content)\n    if (response.status === 204) {\n      return null; // No content to return\n    }\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Request failed');\n    }\n    return response.json();\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getParentsMetrics = data => apiRequest('/api/parents/parents-metrics/', 'POST', data);\nexport const getParents = () => apiRequest('/api/parents/');\nexport const addParent = data => apiRequest('/api/parents/', 'POST', data);\nexport const updateParent = (id, data) => apiRequest(`/api/parents/${id}`, 'PUT', data);\nexport const deleteParent = id => apiRequest(`/api/parents/${id}`, 'DELETE');\nexport const getStudentsMetrics = data => apiRequest('/api/students/students-metrics/', 'POST', data);\nexport const getStudents = () => apiRequest('/api/students/');\nexport const getStudent = id => apiRequest(`/api/students/${id}`);\nexport const addStudent = data => apiRequest('/api/students/', 'POST', data);\nexport const updateStudent = (id, data) => apiRequest(`/api/students/${id}`, 'PUT', data);\nexport const deleteStudent = id => apiRequest(`/api/students/${id}`, 'DELETE');\nexport const getEventsMetrics = data => apiRequest('/api/events/metrics/', 'POST', data);\nexport const getEvents = () => apiRequest('/api/events/');\nexport const addEvent = data => apiRequest('/api/events/', 'POST', data);\nexport const updateEvent = (id, data) => apiRequest(`/api/events/${id}`, 'PUT', data);\nexport const deleteEvent = id => apiRequest(`/api/events/${id}`, 'DELETE');\nexport const getSubjects = () => apiRequest('/api/subjects/');\nexport const addSubject = data => apiRequest('/api/subjects/', 'POST', data);\nexport const updateSubject = (id, data) => apiRequest(`/api/subjects/${id}`, 'PUT', data);\nexport const deleteSubject = id => apiRequest(`/api/subjects/${id}`, 'DELETE');\nexport const getTerms = () => apiRequest('/api/terms/');\nexport const addTerm = data => apiRequest('/api/terms/', 'POST', data);\nexport const updateTerm = (id, data) => apiRequest(`/api/terms/${id}`, 'PUT', data);\nexport const deleteTerm = id => apiRequest(`/api/terms/${id}`, 'DELETE');\nexport const getMarks = () => apiRequest('/api/grades/');\nexport const addMarks = data => apiRequest('/api/grades/', 'POST', data);\nexport const updateMarks = (id, data) => apiRequest(`/api/grades/${id}`, 'PUT', data);\nexport const deleteMarks = id => apiRequest(`/api/grades/${id}`, 'DELETE');\nexport const getAttendance = () => apiRequest('/api/attendances/');\nexport const addAttendance = data => apiRequest('/api/attendances/', 'POST', data);\nexport const updateAttendance = (id, data) => apiRequest(`/api/attendances/${id}`, 'PUT', data);\nexport const deleteAttendance = id => apiRequest(`/api/attendances/${id}`, 'DELETE');\nexport const login = data => apiRequest('/api/users/login', 'POST', data);\nexport const logout = () => apiRequest('/api/users/logout');","map":{"version":3,"names":["API_URL","getToken","localStorage","getItem","console","log","apiRequest","endpoint","method","body","token","headers","response","fetch","JSON","stringify","status","ok","error","json","Error","getParentsMetrics","data","getParents","addParent","updateParent","id","deleteParent","getStudentsMetrics","getStudents","getStudent","addStudent","updateStudent","deleteStudent","getEventsMetrics","getEvents","addEvent","updateEvent","deleteEvent","getSubjects","addSubject","updateSubject","deleteSubject","getTerms","addTerm","updateTerm","deleteTerm","getMarks","addMarks","updateMarks","deleteMarks","getAttendance","addAttendance","updateAttendance","deleteAttendance","login","logout"],"sources":["/Users/irakizagaius/Downloads/IshuriHub/frontend/src/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000';\n\nconst getToken = () => {\n  return localStorage.getItem('token');\n};\nconsole.log(getToken());\nconst apiRequest = async (endpoint, method = 'GET', body = null) => {\n  const token = getToken();\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  try{\n  const response = await fetch(`${API_URL}${endpoint}`, {\n    method,\n    headers,\n    body: body ? JSON.stringify(body) : null,\n  });\n  \n    // Handle cases with no content (e.g., 204 No Content)\n    if (response.status === 204) {\n      return null; // No content to return\n    }\n\n  if (!response.ok) {\n    const error = await response.json();\n      throw new Error(error.error || 'Request failed');\n    }\n  \n  return response.json();\n}catch(error){\n  throw error;\n}\n};\n\n\nexport const getParentsMetrics = (data) => apiRequest('/api/parents/parents-metrics/', 'POST', data);\nexport const getParents = () => apiRequest('/api/parents/');\nexport const addParent = (data) => apiRequest('/api/parents/', 'POST', data);\nexport const updateParent = (id, data) => apiRequest(`/api/parents/${id}`, 'PUT', data);\nexport const deleteParent = (id) => apiRequest(`/api/parents/${id}`, 'DELETE');\nexport const getStudentsMetrics = (data) => apiRequest('/api/students/students-metrics/', 'POST', data);\nexport const getStudents = () => apiRequest('/api/students/');\nexport const getStudent = (id) => apiRequest(`/api/students/${id}`);\nexport const addStudent = (data) => apiRequest('/api/students/', 'POST', data);\nexport const updateStudent = (id, data) => apiRequest(`/api/students/${id}`, 'PUT', data);\nexport const deleteStudent = (id) => apiRequest(`/api/students/${id}`, 'DELETE');\nexport const getEventsMetrics = (data) => apiRequest('/api/events/metrics/', 'POST', data);\nexport const getEvents = () => apiRequest('/api/events/');\nexport const addEvent = (data) => apiRequest('/api/events/', 'POST', data);\nexport const updateEvent = (id, data) => apiRequest(`/api/events/${id}`, 'PUT', data);\nexport const deleteEvent = (id) => apiRequest(`/api/events/${id}`, 'DELETE');\nexport const getSubjects = () => apiRequest('/api/subjects/');\nexport const addSubject = (data) => apiRequest('/api/subjects/', 'POST', data);\nexport const updateSubject = (id, data) => apiRequest(`/api/subjects/${id}`, 'PUT', data);\nexport const deleteSubject = (id) => apiRequest(`/api/subjects/${id}`, 'DELETE');\nexport const getTerms = () => apiRequest('/api/terms/');\nexport const addTerm = (data) => apiRequest('/api/terms/', 'POST', data);\nexport const updateTerm = (id, data) => apiRequest(`/api/terms/${id}`, 'PUT', data);\nexport const deleteTerm = (id) => apiRequest(`/api/terms/${id}`, 'DELETE');\nexport const getMarks = () => apiRequest('/api/grades/');\nexport const addMarks = (data) => apiRequest('/api/grades/', 'POST', data);\nexport const updateMarks = (id, data) => apiRequest(`/api/grades/${id}`, 'PUT', data);\nexport const deleteMarks = (id) => apiRequest(`/api/grades/${id}`, 'DELETE');\nexport const getAttendance = () => apiRequest('/api/attendances/');\nexport const addAttendance = (data) => apiRequest('/api/attendances/', 'POST', data);\nexport const updateAttendance = (id, data) => apiRequest(`/api/attendances/${id}`, 'PUT', data);\nexport const deleteAttendance = (id) => apiRequest(`/api/attendances/${id}`, 'DELETE');\nexport const login = (data) => apiRequest('/api/users/login', 'POST', data);\nexport const logout = () => apiRequest('/api/users/logout');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}