{"ast":null,"code":"var _jsxFileName = \"/Users/irakizagaius/Downloads/IshuriHub/frontend/src/components/StudentDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './StudentDetails.css';\nimport { getSubjects, getStudents, getTerms, addMarks } from '../api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentDetailsPage = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [marks, setMarks] = useState({});\n  const [currentTerm, setCurrentTerm] = useState(null);\n  const [isMarksModalOpen, setIsMarksModalOpen] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [newMarkData, setNewMarkData] = useState({\n    subject: '',\n    testType: 'test',\n    markPercentage: ''\n  });\n  // Retrieve user data from localStorage\n  const username = localStorage.getItem('username');\n  const email = localStorage.getItem('email');\n  const [terms, setTerms] = useState([]);\n  // Side menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // Profile dropdown state\n  const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const students = await getStudents();\n        setStudents(students);\n        const subjects = await getSubjects();\n        setSubjects(subjects);\n        const termDetails = await getTerms();\n        const now = new Date();\n        const activeTerm = termDetails.find(term => new Date(term.startDate) <= now && now <= new Date(term.endDate));\n        setCurrentTerm(activeTerm || termDetails[0]); // Default to first term if no active term\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const handleMarksSubmit = async e => {\n    e.preventDefault();\n    try {\n      await addMarks(selectedStudent.id, currentTerm.id, newMarkData);\n      setMarks(prev => {\n        var _prev$selectedStudent;\n        return {\n          ...prev,\n          [selectedStudent.id]: {\n            ...prev[selectedStudent.id],\n            [currentTerm.id]: {\n              ...((_prev$selectedStudent = prev[selectedStudent.id]) === null || _prev$selectedStudent === void 0 ? void 0 : _prev$selectedStudent[currentTerm.id]),\n              [newMarkData.subject]: {\n                type: newMarkData.testType,\n                percentage: newMarkData.markPercentage\n              }\n            }\n          }\n        };\n      });\n      setIsMarksModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error adding marks:', error);\n    }\n  };\n  const calculateSubjectTotal = subjectMarks => {\n    const testMarks = (subjectMarks === null || subjectMarks === void 0 ? void 0 : subjectMarks.test) || 0;\n    const examMarks = (subjectMarks === null || subjectMarks === void 0 ? void 0 : subjectMarks.exam) || 0;\n    return testMarks + examMarks;\n  };\n  const calculateTermTotal = (studentMarks, termId) => {\n    return subjects.reduce((total, subject) => {\n      var _studentMarks$termId;\n      const subjectMarks = studentMarks === null || studentMarks === void 0 ? void 0 : (_studentMarks$termId = studentMarks[termId]) === null || _studentMarks$termId === void 0 ? void 0 : _studentMarks$termId[subject.name];\n      return total + calculateSubjectTotal(subjectMarks);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currentTerm ? `Current Term: ${currentTerm.name}` : 'No Active Term'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), isMarksModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Add Marks for \", selectedStudent === null || selectedStudent === void 0 ? void 0 : selectedStudent.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleMarksSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newMarkData.subject,\n              onChange: e => setNewMarkData({\n                ...newMarkData,\n                subject: e.target.value\n              }),\n              children: subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: subject.name,\n                children: subject.name\n              }, subject.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Test Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newMarkData.testType,\n              onChange: e => setNewMarkData({\n                ...newMarkData,\n                testType: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"test\",\n                children: \"Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"exam\",\n                children: \"Exam\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Mark Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: newMarkData.markPercentage,\n              onChange: e => setNewMarkData({\n                ...newMarkData,\n                markPercentage: e.target.value\n              }),\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMarksModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), currentTerm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"term-report\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Report for \", currentTerm.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", currentTerm.startDate, \" to \", currentTerm.endDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), subjects.map(subject => /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"3\",\n              children: subject.name\n            }, subject.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Term Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), subjects.map(subject => {\n              var _marks$student$id, _marks$student$id$cur;\n              const subjectMarks = ((_marks$student$id = marks[student.id]) === null || _marks$student$id === void 0 ? void 0 : (_marks$student$id$cur = _marks$student$id[currentTerm.id]) === null || _marks$student$id$cur === void 0 ? void 0 : _marks$student$id$cur[subject.name]) || {};\n              const subjectTotal = calculateSubjectTotal(subjectMarks);\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"Test: \", (subjectMarks === null || subjectMarks === void 0 ? void 0 : subjectMarks.test) || 0, \"%\"]\n                }, `${subject.id}-test`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"Exam: \", (subjectMarks === null || subjectMarks === void 0 ? void 0 : subjectMarks.exam) || 0, \"%\"]\n                }, `${subject.id}-exam`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"Total: \", subjectTotal, \"%\"]\n                }, `${subject.id}-total`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [calculateTermTotal(marks[student.id], currentTerm.id), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No active term is currently ongoing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDetailsPage, \"96KQTpAAhrTYkALfPCl8lOVuEnw=\");\n_c = StudentDetailsPage;\nexport default StudentDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"StudentDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","getSubjects","getStudents","getTerms","addMarks","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentDetailsPage","_s","students","setStudents","subjects","setSubjects","marks","setMarks","currentTerm","setCurrentTerm","isMarksModalOpen","setIsMarksModalOpen","selectedStudent","setSelectedStudent","newMarkData","setNewMarkData","subject","testType","markPercentage","username","localStorage","getItem","email","terms","setTerms","menuOpen","setMenuOpen","showProfileDropdown","setShowProfileDropdown","fetchInitialData","termDetails","now","Date","activeTerm","find","term","startDate","endDate","error","console","handleMarksSubmit","e","preventDefault","id","prev","_prev$selectedStudent","type","percentage","calculateSubjectTotal","subjectMarks","testMarks","test","examMarks","exam","calculateTermTotal","studentMarks","termId","reduce","total","_studentMarks$termId","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","min","max","onClick","colSpan","student","_marks$student$id","_marks$student$id$cur","subjectTotal","_c","$RefreshReg$"],"sources":["/Users/irakizagaius/Downloads/IshuriHub/frontend/src/components/StudentDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './StudentDetails.css';\nimport { getSubjects, getStudents, getTerms, addMarks } from '../api'; \n\nconst StudentDetailsPage = () => {\n  const [students, setStudents] = useState([]);\n  const [subjects, setSubjects] = useState([]);\n  const [marks, setMarks] = useState({});\n  const [currentTerm, setCurrentTerm] = useState(null);\n  const [isMarksModalOpen, setIsMarksModalOpen] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [newMarkData, setNewMarkData] = useState({\n    subject: '',\n    testType: 'test',\n    markPercentage: ''\n  });\n  // Retrieve user data from localStorage\n  const username = localStorage.getItem('username');\n  const email = localStorage.getItem('email');\n\n  const [terms, setTerms] = useState([]);\n  // Side menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n  \n  // Profile dropdown state\n  const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n  \n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const students = await getStudents();\n        setStudents(students);\n\n        const subjects = await getSubjects();\n        setSubjects(subjects);\n\n        const termDetails = await getTerms();\n        const now = new Date();\n\n        const activeTerm = termDetails.find(\n          (term) => new Date(term.startDate) <= now && now <= new Date(term.endDate)\n        );\n        setCurrentTerm(activeTerm || termDetails[0]); // Default to first term if no active term\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchInitialData();\n  }, []);\n\n  const handleMarksSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await addMarks(selectedStudent.id, currentTerm.id, newMarkData);\n      setMarks((prev) => ({\n        ...prev,\n        [selectedStudent.id]: {\n          ...prev[selectedStudent.id],\n          [currentTerm.id]: {\n            ...prev[selectedStudent.id]?.[currentTerm.id],\n            [newMarkData.subject]: {\n              type: newMarkData.testType,\n              percentage: newMarkData.markPercentage,\n            },\n          },\n        },\n      }));\n      setIsMarksModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error adding marks:', error);\n    }\n  };\n\n  const calculateSubjectTotal = (subjectMarks) => {\n    const testMarks = subjectMarks?.test || 0;\n    const examMarks = subjectMarks?.exam || 0;\n    return testMarks + examMarks;\n  };\n\n  const calculateTermTotal = (studentMarks, termId) => {\n    return subjects.reduce((total, subject) => {\n      const subjectMarks = studentMarks?.[termId]?.[subject.name];\n      return total + calculateSubjectTotal(subjectMarks);\n    }, 0);\n  };\n\n  return (\n    <div className=\"students-container\">\n      <h1>{currentTerm ? `Current Term: ${currentTerm.name}` : 'No Active Term'}</h1>\n\n      {/* Add Marks Modal */}\n      {isMarksModalOpen && (\n        <div className=\"popup-form\">\n          <div className=\"form-container\">\n            <h2>Add Marks for {selectedStudent?.name}</h2>\n            <form onSubmit={handleMarksSubmit}>\n              <div className=\"form-group\">\n                <label>Subject</label>\n                <select\n                  value={newMarkData.subject}\n                  onChange={(e) =>\n                    setNewMarkData({ ...newMarkData, subject: e.target.value })\n                  }\n                >\n                  {subjects.map((subject) => (\n                    <option key={subject.id} value={subject.name}>\n                      {subject.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Test Type</label>\n                <select\n                  value={newMarkData.testType}\n                  onChange={(e) =>\n                    setNewMarkData({ ...newMarkData, testType: e.target.value })\n                  }\n                >\n                  <option value=\"test\">Test</option>\n                  <option value=\"exam\">Exam</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Mark Percentage</label>\n                <input\n                  type=\"number\"\n                  value={newMarkData.markPercentage}\n                  onChange={(e) =>\n                    setNewMarkData({ ...newMarkData, markPercentage: e.target.value })\n                  }\n                  min=\"0\"\n                  max=\"100\"\n                />\n              </div>\n\n              <button type=\"submit\">Submit Marks</button>\n            </form>\n            <button onClick={() => setIsMarksModalOpen(false)}>Close</button>\n          </div>\n        </div>\n      )}\n\n      {/* Term Report Table */}\n      {currentTerm ? (\n        <div className=\"term-report\">\n          <h2>Report for {currentTerm.name}</h2>\n          <p>Duration: {currentTerm.startDate} to {currentTerm.endDate}</p>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Student Name</th>\n                {subjects.map((subject) => (\n                  <th key={subject.id} colSpan=\"3\">{subject.name}</th>\n                ))}\n                <th>Term Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student.id}>\n                  <td>{student.name}</td>\n                  {subjects.map((subject) => {\n                    const subjectMarks = marks[student.id]?.[currentTerm.id]?.[subject.name] || {};\n                    const subjectTotal = calculateSubjectTotal(subjectMarks);\n                    return (\n                      <>\n                        <td key={`${subject.id}-test`}>Test: {subjectMarks?.test || 0}%</td>\n                        <td key={`${subject.id}-exam`}>Exam: {subjectMarks?.exam || 0}%</td>\n                        <td key={`${subject.id}-total`}>Total: {subjectTotal}%</td>\n                      </>\n                    );\n                  })}\n                  <td>{calculateTermTotal(marks[student.id], currentTerm.id)}%</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <p>No active term is currently ongoing.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StudentDetailsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}